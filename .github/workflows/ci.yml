name: CI for meeting2tasks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand({ping:1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies for ai-service
      working-directory: ./ai-service
      run: |
        # Xóa cache của pip để đảm bảo cài đặt phiên bản mới
        pip cache purge
        # Cài đặt dependencies với --force-reinstall để ép cài đặt phiên bản chính xác
        pip install --force-reinstall -r requirements.txt
        # Kiểm tra phiên bản openai đã cài đặt
        pip show openai

    - name: Debug environment
      run: |
        java --version
        mvn --version
        python --version
        pip --version
        echo "MongoDB container logs:"
        docker logs $(docker ps -q -f ancestor=mongo:4.4)

    - name: Build and Test Task Service
      working-directory: ./task-service
      run: |
        mvn clean install

    - name: Build and Test Scheduling Service
      working-directory: ./scheduling-service
      run: |
        mvn clean install


    - name: Test AI Service
      working-directory: ./ai-service
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        # Vô hiệu hóa proxy trong môi trường CI
        HTTP_PROXY: ""
        HTTPS_PROXY: ""
        http_proxy: ""
        https_proxy: ""
      run: |
        uvicorn main:app --host 0.0.0.0 --port 8000 &
        # Chờ server khởi động, thử tối đa 30 giây
        for i in {1..30}; do
          curl --fail http://localhost:8000/docs && break || sleep 1
        done
        # Gửi request thử nghiệm
        curl -X POST http://localhost:8000/extract-tasks \
          -H "Content-Type: application/json" \
          -d '{"user_input": "Test task generation", "project_id": null}' || exit 1