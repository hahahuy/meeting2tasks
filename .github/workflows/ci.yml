name: CI for meeting2tasks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand({ping:1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      zookeeper:
        image: confluentinc/cp-zookeeper:7.3.0
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
        ports:
          - 2181:2181
      kafka:
        image: confluentinc/cp-kafka:7.3.0
        ports:
          - 9092:9092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        depends_on:
          - zookeeper
        options: >-
          --health-cmd "kafka-topics --list --bootstrap-server kafka:9092"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Debug environment
      run: |
        java --version
        mvn --version
        echo "MongoDB container logs:"
        docker logs $(docker ps -q -f ancestor=mongo:4.4)
        echo "Kafka container logs:"
        docker logs $(docker ps -q -f ancestor=confluentinc/cp-kafka:7.3.0)

    - name: Build and Test Task Service
      working-directory: ./task-service
      run: |
        mvn clean install

    - name: Build and Test Scheduling Service
      working-directory: ./scheduling-service
      run: |
        mvn clean install

    - name: Build and Test Assignment Service
      working-directory: ./assignment-service
      run: |
        mvn clean install